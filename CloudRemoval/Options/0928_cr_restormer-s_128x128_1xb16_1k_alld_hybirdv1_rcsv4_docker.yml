# general settings
name: 0928_cr_restormer-s_128x128_1xb16_1k_alld_hybirdv1_rcsv4_docker
model_type: ImageCleanModel
scale: 1
num_gpu: 1  # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_CloudRemoval_RCSv4
    dataroot_gt: /data/train/opt_clear
    dataroot_lq: /data/train/opt_cloudy
    geometric_augs: true

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 16

#    ### -------------Progressive training--------------------------
#    mini_batch_sizes: [8,5,4,2,1,1]             # Batch size per gpu
#    iters: [92000,64000,48000,36000,36000,24000]
#    gt_size: 384   # Max patch size for progressive training
#    gt_sizes: [128,160,192,256,320,384]  # Patch sizes for progressive training.
#    ### ------------------------------------------------------------

    ## ------- Training on single fixed-patch size 128x128---------
    mini_batch_sizes: [16]
    iters: [1000]
    gt_size: 128
    gt_sizes: [128]
    ## ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: ValSet
    type: Dataset_CloudRemoval
    dataroot_gt: /output/val/opt_clear
    dataroot_lq: /output/val/opt_cloudy
    io_backend:
      type: disk
  test:
    name: TestSet
    type: Dataset_CloudRemoval
    dataroot_gt: /test/opt_cloudy
    dataroot_lq: /test/opt_cloudy
    io_backend:
      type: disk

# network structures: restormer-s
network_g:
  type: Restormer
  inp_channels: 5
  out_channels: 3
  dim: 32
  num_blocks: [2,2,2,8]
  num_refinement_blocks: 2
  heads: [1,2,2,4]
  ffn_expansion_factor: 2.66
  bias: False
  LayerNorm_type: WithBias
  dual_pixel_task: False
#network_g:
#  type: Restormer
#  inp_channels: 3
#  out_channels: 3
#  dim: 48
#  num_blocks: [4,6,6,8]
#  num_refinement_blocks: 4
#  heads: [1,2,4,8]
#  ffn_expansion_factor: 2.66
#  bias: False
#  LayerNorm_type: WithBias
#  dual_pixel_task: False


# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  total_iter: 1000
  warmup_iter: -1 # no warm up
  use_grad_clip: true

  # Split 300k iterations into two cycles. 
  # 1st cycle: fixed 3e-4 LR for 92k iters. 
  # 2nd cycle: cosine annealing (3e-4 to 1e-6) for 208k iters.
  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [350, 800]
    restart_weights: [1,1]
    eta_mins: [0.0003,0.000001]
  
  mixing_augs:
    mixup: false
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: AdamW
    lr: !!float 3e-4
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]
  
  # losses
  pixel_opt:
    type: HybirdV1
    loss_weight: 1
    reduction: mean

# validation settings
val:
  window_size: 8
  val_freq: !!float 5e2
  save_img: false
  rgb2bgr: false
  use_image: false
  max_minibatch: 8

  metrics:
    score: # metric name, can be arbitrary
      type: calculate_score_crgame
      crop_border: 0
      test_y_channel: false
    ssim: # metric name, can be arbitrary
      type: calculate_ssim_crgame
      crop_border: 0
      test_y_channel: false
    cc: # metric name, can be arbitrary
      type: calculate_cc_crgame
      crop_border: 0
      test_y_channel: false
test:
  rgb2bgr: false
  max_minibatch: 16

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: !!float 5e2
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
